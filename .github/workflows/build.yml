name: build

on:
  push:
  pull_request:

jobs:
  build-apk-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: ./.github/actions/setup-android

      - run: flutter build apk --split-per-abi --release
      - uses: actions/upload-artifact@v3
        with:
          name: release
          path: build/app/outputs/flutter-apk/

  build-apk-debug:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: ./.github/actions/setup-android

      - run: flutter build apk --split-per-abi --debug
      - uses: actions/upload-artifact@v3
        with:
          name: release
          path: build/app/outputs/flutter-apk/

  build-appbundle-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: ./.github/actions/setup-android

      - run: flutter build appbundle --release
      - uses: actions/upload-artifact@v3
        with:
          name: release
          path: build/app/outputs/bundle/

  build-appbundle-debug:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: ./.github/actions/setup-android

      - run: flutter build appbundle --debug
      - uses: actions/upload-artifact@v3
        with:
          name: release
          path: build/app/outputs/bundle/

  check-ref:
    runs-on: ubuntu-latest
    outputs:
      is_version: ${{ steps.check-ref.outputs.is_version }}
    steps:
      - id: check-ref
        run: |
          if [[ $GITHUB_REF =~ ^refs/tags/v[0-9]+.[0-9]+.[0-9]+$ ]]; then
              echo "is_version=true" >> $GITHUB_OUTPUT
          else
              echo "is_version=false" >> $GITHUB_OUTPUT
          fi

  release:
    needs: [ check-ref, build-apk-release, build-apk-debug, build-appbundle-release, build-appbundle-debug ]
    if: needs.check-ref.outputs.is_version == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: release
      - uses: softprops/action-gh-release@v1
        with:
          files: '**'

  sentry:
    needs: [ check-ref ]
    if: needs.check-ref.outputs.is_version == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: mikefarah/yq@master
        id: yq
        with:
          cmd: yq '.version' 'pubspec.yaml'
      - uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ccxxxi
          SENTRY_PROJECT: ecg_monitor
        with:
          environment: production
          version: io.github.ccxxxi.ecg_monitor@${{ steps.yq.outputs.result }}
